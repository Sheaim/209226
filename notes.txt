Object oriented design!
Object Oriented Programming
	look at: Martin, Robert C. "Design principles and design patterns." Object Mentor 1 (2000): 1-34
	http://www.objectmentor.com/resources/articles/Principles_and_Patterns.pdf

SOLID: SRP OCP LSP ISP DIP
--------------------------
Single Responsibility Principle
	
	
Open-Closed Principle
	A module should be open for extension but closed for modification
	"It is always better if changes do not propogate into existing code that already works.
	If you don't have to change working code you aren't likely to break it"
	
Liskov Substitution Principle
	Subclasses should be substitutable for their base classes
		Design By Contract
		Circle-Eclipse dillema
	
Interface Segregation Principle
	
	
	
Dependency Inversion Principle
	Depend upon abstractions. Do not depend upon concretions.
	
	
--------------------------
Design Patterns
	look at: Gamma, Erich, et al. Design patterns: elements of reusable object oriented software, Pearson Education 1994.

DRY
--------------------------
Don't repeat yourself
--------------------------
KISS
--------------------------
Keep it simple, stupid
--------------------------





Reimplement timer to use "observer" class.